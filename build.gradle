import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
buildscript {
    ext.kotlinVersion = '1.9.22'
    project.ext.mainClassName = "MainGame"

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

    }
}
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22' // Ensure you have the desired Kotlin version
}

compileJava {
    // Укажите целевую версию JVM для Java-кода
    targetCompatibility = '1.8' // Используйте нужную вам версию, например, '1.8' для Java 8
}


tasks.withType(KotlinCompile).configureEach {
    // Укажите целевую версию JVM для Kotlin-кода
    kotlinOptions.jvmTarget = '1.8' // Используйте нужную вам версию, например, '1.8' для Java 8
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "My GDX Game"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.20'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: "kotlin-android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
    android {
        // Другие конфигурации
        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_17
            targetCompatibility = JavaVersion.VERSION_17
        }
    }
}

project(":core") {
    apply plugin: "kotlin"
    kotlin {
        compileKotlin {
            kotlinOptions.jvmTarget = "1.8"
        }


        dependencies {
            api "com.badlogicgames.gdx:gdx:$gdxVersion"
            api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
            api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
            api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
            api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
            api "com.badlogicgames.ashley:ashley:$ashleyVersion"
            api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        }
    }
}